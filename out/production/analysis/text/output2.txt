(constsym, const)
(ident, a)
(eql, =)
(number, 10)
(semicolon, ;)
(varsym, var)
(ident, b)
(comma, ,)
(ident, c)
(semicolon, ;)
(proceduresym, procedure)
(ident, p)
(semicolon, ;)
(varsym, var)
(ident, d)
(semicolon, ;)
(beginsym, begin)
(ident, d)
(becomes, :=)
(number, 20)
(semicolon, ;)
(ident, c)
(becomes, :=)
(ident, d)
(slash, /)
(ident, a)
(semicolon, ;)
(ident, c)
(becomes, :=)
(ident, c)
(plus, +)
(ident, b)
(semicolon, ;)
(ifsym, if)
(ident, a)
(lss, <)
(ident, c)
(thensym, then)
(ident, c)
(becomes, :=)
(number, 2)
(times, *)
(null, c)
(null, else)
(ident, c)
(becomes, :=)
(number, 2)
(times, *)
(ident, c)
(plus, +)
(number, 1)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(beginsym, begin)
(readsym, read)
(Lparen, ()
(ident, b)
(Rparen, ))
(semicolon, ;)
(whilesym, while)
(ident, b)
(neq, #)
(number, 0)
(dosym, do)
(beginsym, begin)
(callsym, call)
(ident, p)
(semicolon, ;)
(writesym, write)
(Lparen, ()
(number, 2)
(times, *)
(ident, c)
(Rparen, ))
(semicolon, ;)
(readsym, read)
(Lparen, ()
(ident, b)
(Rparen, ))
(semicolon, ;)
(endsym, end)
(endsym, end)
(period, .)
